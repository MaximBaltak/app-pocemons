{"version":3,"sources":["components/SignUp/SignUp.module.scss","components/Cads/Cards.module.scss","components/CardID/CardID.module.scss","components/CardsHeader/CardsHeader.module.scss","components/Cads/Card/Card.module.scss","img/arrow.png","components/SignUp/SignUp.js","components/Confirmation/Confirmation.js","components/CardsHeader/CardsHeader.js","components/Cads/Card/Card.js","components/Cads/Cards.js","components/CardID/CardID.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SignUp","login","password","changeLogin","changePassword","useState","styleLogin","setStyleLogin","stylePassword","setStylePassword","history","useHistory","className","styles","form","style","color","borderColor","onChange","e","target","value","input","type","placeholder","name","onClick","test","push","button","width","height","src","arrow","alt","Confirmation","prevPassword","setPassword","CardsHeader","children","header","location","pathname","container","Card","image","text","card","Cards","list","types","subTypes","setType","subType","setSubType","filterListTypeAndSubType","setFilterListTypeAndSubType","useEffect","arr","console","log","filter","el","subtypes","grid","selected","defaultValue","map","cards","to","id","images","small","artist","CardId","params","useParams","description","large","attacks","information","supertype","damage","cost","App","setLogin","setList","setTypes","setSubTypes","fetch","then","res","json","data","catch","err","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.b8661cbc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SignUp_form__1AzD-\",\"input\":\"SignUp_input__D-ruy\",\"button\":\"SignUp_button__2_5ku\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Cards_grid__1625_\",\"selected\":\"Cards_selected__-a9An\",\"cards\":\"Cards_cards__3u9qU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"CardID_grid__9jSrK\",\"description\":\"CardID_description__QvEjE\",\"information\":\"CardID_information__1MNSf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"CardsHeader_header__3IhbC\",\"container\":\"CardsHeader_container__2yn4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3nalr\"};","export default __webpack_public_path__ + \"static/media/arrow.7b96767d.png\";","import React, {useState} from 'react';\r\nimport styles from './SignUp.module.scss'\r\nimport arrow from './../../img/arrow.png'\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst SignUp = ({login, password, changeLogin, changePassword}) => {\r\n    let [styleLogin, setStyleLogin] = useState('black')\r\n    let [stylePassword, setStylePassword] = useState('black')\r\n    let history = useHistory()\r\n    let click = () => {\r\n        if (login === '' || password === '') {\r\n            setStyleLogin('red')\r\n            setStylePassword('red')\r\n        } else {\r\n            setStyleLogin('black')\r\n            setStylePassword('black')\r\n            if (!/^[$.+@]?([a-z])+[$.+@]?([a-z])+?$/i.test(login)) {\r\n                    \r\n            } else {\r\n                if(!/[@.+$]+/i.test(login)) {\r\n                    setStyleLogin('red')\r\n                }else{\r\n                    setStyleLogin('black')\r\n                    setStylePassword('black')\r\n                    if (!/^[\\d\\w]{8,}$/i.test(password)) {\r\n                        setStylePassword('red')\r\n                    } else {\r\n                        setStyleLogin('black')\r\n                        setStylePassword('black')\r\n                        history.push('/confirmation')\r\n                    }\r\n                }       \r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.form}>\r\n            <input style={{color: styleLogin, borderColor: styleLogin}} onChange={e => changeLogin(e.target.value)}\r\n                   className={styles.input} type=\"text\"\r\n                   placeholder=\"Введите логин\" name='login'/>\r\n            <input style={{color: stylePassword, borderColor: stylePassword}}\r\n                   onChange={e => changePassword(e.target.value)} className={styles.input} type=\"password\"\r\n                   placeholder=\"Введите пороль\" name='password'/>\r\n            <button onClick={click} className={styles.button} type=\"submit\"><img width='41' height='50' src={arrow}\r\n                                                                                 alt=\"arrow\"/>\r\n            </button>\r\n            <p><span style={{color: styleLogin}}>логин должен состоять из латиницы, иметь хотя бы один из знаков $ . @ + ,и не должен быть пустым.</span><br/><br/><span\r\n                style={{color: stylePassword}}>пороль должен состоять из 8 цифр и латинских букв и не должен быть пустым.</span>\r\n            </p>\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, {useState} from 'react';\r\nimport styles from './../SignUp/SignUp.module.scss'\r\nimport arrow from './../../img/arrow.png'\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Confirmation = ({prevPassword}) => {\r\n    let history = useHistory()\r\n    let [password, setPassword] = useState()\r\n    let [stylePassword, setStylePassword] = useState('black')\r\n    let click = () => {\r\n        if (prevPassword !== password) {\r\n           setStylePassword('red')\r\n\r\n        } else {\r\n            setStylePassword('black')\r\n            history.push('/pokemon')\r\n        }\r\n    }\r\n    return (\r\n        <div className={styles.form}>\r\n            <input style={{color:stylePassword,borderColor:stylePassword}} onChange={e => setPassword(e.target.value)} className={styles.input} type='password'\r\n                   placeholder='Потвердите пороль' name='password'/>\r\n            <button onClick={click} className={styles.button}><img width='41' height='50' src={arrow} alt=\"arrow\"/>\r\n            </button>\r\n            {stylePassword === 'red' ? <p style={{color: stylePassword}}>Пороли не совпадают</p> : null }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Confirmation;\r\n","import React from 'react';\r\nimport styles from './CardsHeader.module.scss'\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst CardsHeader = ({children}) => {\r\n    let history = useHistory()\r\n    let click=()=>{\r\n\r\n          if(history.location.pathname==='/pokemon'){\r\n              history.push('/')\r\n          }else {\r\n              history.push('/pokemon')\r\n          }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <header className={styles.header}>\r\n                <button onClick={click}>← Назад</button>\r\n                <h1>Покемоны</h1>\r\n            </header>\r\n            <div className={styles.container}>{children}</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CardsHeader;\r\n","import React from 'react';\r\nimport styles from './Card.module.scss'\r\n\r\nconst Card = ({image, text, name}) => {\r\n\r\n\r\n    return (\r\n        <div className={styles.card}>\r\n            <img src={image} alt='pokemon'/>\r\n            <h2>{name}</h2>\r\n            <p>{text || 'Нет описания'}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import styles from './Cards.module.scss'\r\nimport Card from \"./Card/Card\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst Cards = ({list, types, subTypes}) => {\r\n    let [type, setType] = useState('allTypes')\r\n    let [subType, setSubType] = useState('AllSubTypes')\r\n    let [filterListTypeAndSubType, setFilterListTypeAndSubType] = useState([...list])\r\n\r\n\r\n    useEffect(() => {\r\n        let arr = []\r\n        if (type === 'allTypes' && subType === 'AllSubTypes') {\r\n            console.log(1)\r\n            arr = [...list]\r\n        } else if (type !== 'allTypes' && subType === 'AllSubTypes') {\r\n            console.log(2)\r\n            arr = [...list.filter(el => el.types[0] === type)]\r\n        } else if (type === 'allTypes' && subType !== 'AllSubTypes') {\r\n            console.log(3)\r\n            arr = [...list.filter(el => el.subtypes[0] === subType)]\r\n        } else if (type !== 'allTypes' && subType !== 'AllSubTypes') {\r\n            console.log(4)\r\n            arr = [...list.filter(el => el.types[0] === type)]\r\n            arr = [...arr.filter(el => el.subtypes[0] === subType)]\r\n        }\r\n        console.log(5)\r\n        if (arr !== []) {\r\n            setFilterListTypeAndSubType([...arr])\r\n        } else {\r\n            setFilterListTypeAndSubType([...list])\r\n        }\r\n\r\n\r\n    }, [type, subType])\r\n    console.log(filterListTypeAndSubType)\r\n    return (\r\n        <div className={styles.grid}>\r\n            <div className={styles.selected}>\r\n                <select onChange={e => setType(e.target.value)} defaultValue='allTypes' name=\"types\">\r\n                    <option value='allTypes'>allTypes</option>\r\n                    {types.map(el => <option value={el}>{el}</option>)}\r\n                </select>\r\n                <select onChange={e => setSubType(e.target.value)} name=\"SubTypes\" defaultValue='AllSubTypes'>\r\n                    <option value='AllSubTypes'>AllSubTypes</option>\r\n                    {subTypes.map(el => <option value={el}>{el}</option>)}\r\n                </select>\r\n            </div>\r\n            <div className={styles.cards}>\r\n                <ul>\r\n                {filterListTypeAndSubType.map(el =><li key={el.id}> <NavLink to={`/pokemon/${el.id}`}><Card image={el.images.small}\r\n                                                                                            name={el.name}\r\n                                                                                  text={el.artist}/>\r\n                </NavLink></li>)}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import React, {useState} from 'react';\r\nimport styles from './CardID.module.scss'\r\n\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst CardId = ({list}) => {\r\n    let params = useParams()\r\n    let card = useState(list.filter(el => el.id === params.id)[0])\r\n    console.log(card[0])\r\n    return (\r\n        <div className={styles.grid}>\r\n            <div className={styles.description}>\r\n                <img src={card[0].images.large} alt='pokemon'/>\r\n                {card[0].attacks.map(el => <p> {el.text}</p>)}\r\n            </div>\r\n            <div className={styles.information}>\r\n\r\n                <p>{card[0].name}</p>\r\n                <p>{card[0].supertype}</p>\r\n                <p>{card[0].types}</p>\r\n                <p>{card[0].subtypes.map(el => <span> {el}</span>)}</p>\r\n                <hr/>\r\n                <p>{card[0].attacks.map(el => <span> {el.damage}</span>)}</p>\r\n                <p>{card[0].attacks.map(el => <span> {el.cost}</span>)}</p>\r\n                <p>не нашёл</p>\r\n                <p>нету</p>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardId;\r\n","import './App.scss';\nimport {Route, Switch} from \"react-router-dom\";\nimport SignUp from \"./components/SignUp/SignUp\";\nimport Confirmation from \"./components/Confirmation/Confirmation\";\nimport CardsHeader from \"./components/CardsHeader/CardsHeader\";\nimport Cards from \"./components/Cads/Cards\";\nimport CardId from \"./components/CardID/CardID\";\nimport {useEffect, useState} from \"react\";\n\nfunction App() {\n    let [login, setLogin] = useState()\n    let [password, setPassword] = useState()\n    let changeLogin = (login) => {\n        setLogin(login)\n    }\n    let changePassword = (password) => {\n        setPassword(password)\n    }\n    let [list, setList] = useState([])\n    let [types, setTypes] = useState([])\n    let [subTypes, setSubTypes] = useState([])\n\n\n    useEffect(() => {\n        fetch('https://api.pokemontcg.io/v2/types')\n            .then(res => res.json())\n            .then(res => setTypes([...res.data]))\n            .catch(err => console.log(err))\n    }, [])\n    useEffect(() => {\n        fetch('https://api.pokemontcg.io/v2/subtypes')\n            .then(res => res.json())\n            .then(res => setSubTypes([...res.data]))\n            .catch(err => console.log(err))\n    }, [])\n    useEffect(() => {\n        fetch('https://api.pokemontcg.io/v2/cards')\n            .then(res => res.json())\n            .then(res => setList([...res.data]))\n            .catch(err => console.log(err))\n    }, [])\n\n    return (\n        <>\n            <Switch>\n                <Route exact path='/'><SignUp\n                    login={login}\n                    password={password}\n                    changeLogin={changeLogin}\n                    changePassword={changePassword}/>\n                </Route>\n                <Route exact path='/confirmation'><Confirmation prevPassword={password}/></Route>\n                <Route path='/pokemon'>\n                    <CardsHeader>\n                        <Route exact path='/pokemon'><Cards list={list} subTypes={subTypes} types={types}/></Route>\n                        <Route path='/pokemon/:id'><CardId list={list}/></Route>\n                    </CardsHeader>\n                </Route>\n            </Switch>\n\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}